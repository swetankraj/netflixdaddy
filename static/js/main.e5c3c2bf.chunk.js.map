{"version":3,"sources":["netflix-logo.png","content/Nov 2019/img/avengers.jpg","content/Nov 2019/img/deadpool-2.jpg","content/Nov 2019/img/maradonainmex.jpg","content/Nov 2019/img/fadilycamarala.jpg","content/Nov 2019/img/candyonline.jpg","content/Nov 2019/img/klaus.jpg","MTcard.js","content/Nov 2019/Nov2019.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MTCard","props","styles","backgroundImage","backgrnd","className","style","href","tonetflix","imdblink","name","rating","dateadded","runtime","Nov2019","klaus","candyonline","fadilycamarala","maradonainmex","endgame","deadpool","App","src","logo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,4C,gBCA3CD,EAAOC,QAAU,IAA0B,yC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,uMC0C5BC,MAvCf,SAAgBC,GACd,IAAIC,EAAS,CACXC,gBAAgB,OAAD,OAASF,EAAMG,SAAf,MAGjB,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,cAAcC,MAAOJ,GAClC,yBAAKG,UAAU,oBACb,uBAAGE,KAAMN,EAAMO,WACb,uBAAGH,UAAU,8BAAb,aAKN,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,2BACb,uBAAGE,KAAMN,EAAMQ,UACb,wBAAIJ,UAAU,oBAAoBJ,EAAMS,OAE1C,yBAAKL,UAAU,WACb,8BAAOJ,EAAMU,QADf,UAIF,yBAAKN,UAAU,mBACb,yBAAKA,UAAU,sBACb,6CACA,8BAAOJ,EAAMW,YAEf,yBAAKP,UAAU,sBACb,+CACA,8BAAOJ,EAAMY,c,gGCwCVC,MAhEf,WACE,OACE,yBAAKT,UAAU,gBACb,kBAAC,EAAD,CACED,SAAUW,IACVN,SAAS,wCACTD,UAAU,yCACVE,KAAK,QACLC,OAAO,MACPC,UAAU,aACVC,QAAQ,cAGV,kBAAC,EAAD,CACET,SAAUY,IACVP,SAAS,GACTD,UAAU,yCACVE,KAAK,yBACLC,OAAO,KACPC,UAAU,aACVC,QAAQ,eAGV,kBAAC,EAAD,CACET,SAAUa,IACVR,SAAS,yCACTD,UAAU,yCACVE,KAAK,iDACLC,OAAO,MACPC,UAAU,aACVC,QAAQ,WAGV,kBAAC,EAAD,CACET,SAAUc,IACVT,SAAS,yCACTD,UAAU,yCACVE,KAAK,qBACLC,OAAO,MACPC,UAAU,aACVC,QAAQ,eAGV,kBAAC,EAAD,CACET,SAAUe,IACVV,SAAS,wCACTC,KAAK,oBACLC,OAAO,MACPC,UAAU,aACVC,QAAQ,cAGV,kBAAC,EAAD,CACET,SAAUgB,IACVX,SAAS,wCACTC,KAAK,WACLC,OAAO,MACPC,UAAU,aACVC,QAAQ,gBCjDDQ,MAdf,WACE,OACE,yBAAKhB,UAAU,OACb,yBAAKA,UAAU,OAAOiB,IAAKC,MAE3B,yBAAKlB,UAAU,UACb,yDAGF,kBAAC,EAAD,QCFcmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e5c3c2bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/netflix-logo.a1f673e7.png\";","module.exports = __webpack_public_path__ + \"static/media/avengers.372568c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/deadpool-2.09ef758d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/maradonainmex.f994a0e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fadilycamarala.7e5bfea7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/candyonline.2d309ee6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/klaus.cecc1a0a.jpg\";","import React from \"react\";\r\nimport \"./MTCard.css\";\r\n\r\nfunction MTCard(props) {\r\n  let styles = {\r\n    backgroundImage: `url(${props.backgrnd})`\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-view\">\r\n      <div className=\"card-header\" style={styles}>\r\n        <div className=\"card-header-icon\">\r\n          <a href={props.tonetflix}>\r\n            <i className=\"material-icons header-icon\">►</i>\r\n          </a>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card-movie-content\">\r\n        <div className=\"card-movie-content-head\">\r\n          <a href={props.imdblink}>\r\n            <h3 className=\"card-movie-title\">{props.name}</h3>\r\n          </a>\r\n          <div className=\"ratings\">\r\n            <span>{props.rating}</span>/IMDb\r\n          </div>\r\n        </div>\r\n        <div className=\"card-movie-info\">\r\n          <div className=\"movie-running-time\">\r\n            <label>Date Added</label>\r\n            <span>{props.dateadded}</span>\r\n          </div>\r\n          <div className=\"movie-running-time\">\r\n            <label>Running time</label>\r\n            <span>{props.runtime}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MTCard;\r\n","import React from \"react\";\r\nimport MTCard from \"../../MTcard\";\r\n\r\nimport endgame from \"./img/avengers.jpg\";\r\nimport deadpool from \"./img/deadpool-2.jpg\";\r\nimport maradonainmex from \"./img/maradonainmex.jpg\";\r\nimport fadilycamarala from \"./img/fadilycamarala.jpg\";\r\nimport candyonline from \"./img/candyonline.jpg\";\r\nimport klaus from \"./img/klaus.jpg\";\r\n\r\nfunction Nov2019() {\r\n  return (\r\n    <div className=\"card-content\">\r\n      <MTCard\r\n        backgrnd={klaus}\r\n        imdblink=\"https://www.imdb.com/title/tt4729430/\"\r\n        tonetflix=\"https://www.netflix.com/title/80183187\"\r\n        name=\"Klaus\"\r\n        rating=\"8.5\"\r\n        dateadded=\"Sat 16 Nov\"\r\n        runtime=\"1hr 36min\"\r\n      />\r\n\r\n      <MTCard\r\n        backgrnd={candyonline}\r\n        imdblink=\"\"\r\n        tonetflix=\"https://www.netflix.com/title/81191473\"\r\n        name=\"Candy Online: Season 1\"\r\n        rating=\"NA\"\r\n        dateadded=\"Sat 16 Nov\"\r\n        runtime=\"4 Episodes\"\r\n      />\r\n\r\n      <MTCard\r\n        backgrnd={fadilycamarala}\r\n        imdblink=\"https://www.imdb.com/title/tt11168150/\"\r\n        tonetflix=\"https://www.netflix.com/title/81096745\"\r\n        name=\"Fadily Camara: La plus drôle de tes copines\"\r\n        rating=\"6.8\"\r\n        dateadded=\"Sat 16 Nov\"\r\n        runtime=\"54 min\"\r\n      />\r\n\r\n      <MTCard\r\n        backgrnd={maradonainmex}\r\n        imdblink=\"https://www.imdb.com/title/tt11168104/\"\r\n        tonetflix=\"https://www.netflix.com/title/81034946\"\r\n        name=\"Maradona in Mexico\"\r\n        rating=\"7.7\"\r\n        dateadded=\"Sat 16 Nov\"\r\n        runtime=\"7 Episodes\"\r\n      />\r\n\r\n      <MTCard\r\n        backgrnd={endgame}\r\n        imdblink=\"https://www.imdb.com/title/tt4154796/\"\r\n        name=\"Avengers: Endgame\"\r\n        rating=\"8.5\"\r\n        dateadded=\"Sun 8 Sept\"\r\n        runtime=\"2hr 09min\"\r\n      />\r\n\r\n      <MTCard\r\n        backgrnd={deadpool}\r\n        imdblink=\"https://www.imdb.com/title/tt1431045/\"\r\n        name=\"Deadpool\"\r\n        rating=\"8.0\"\r\n        dateadded=\"Sun 8 Sept\"\r\n        runtime=\"1hr 48min\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nov2019;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport logo from \"./netflix-logo.png\";\nimport Nov2019 from \"./content/Nov 2019/Nov2019\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <img className=\"Logo\" src={logo} />\n\n      <div className=\"latest\">\n        <h1>Latest Movies & TV Shows</h1>\n      </div>\n\n      <Nov2019 />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}